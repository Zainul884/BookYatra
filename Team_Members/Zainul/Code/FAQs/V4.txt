//v4
//When a category card is clicked it will show the card in the foreground and then a list of questions will be displayed which can be clicked on to view the answer
//FAQ's page
//ChatGPT was used to generate some fake data and help in giving a basic design which was later refined. I also used it to help fix the issue where the card was not properly showing the foreground 
//Also used to fix some bugs and errors
//My name is Zainul Malik
"use client";
import React, { useState } from 'react';
import styled from 'styled-components';
import { IconContext } from 'react-icons';
import {
  FaPlane,
  FaBriefcase,
  FaRegLifeRing,
  FaInfoCircle,
  FaPassport,
  FaCreditCard,
  FaLock,
  FaGlobe,
  FaQuestionCircle
} from 'react-icons/fa';


// Styled Components
const Container = styled.div`
  padding: 40px 20px;
  background: #f9f9f9;
`;

const Header = styled.h1`
  text-align: center;
  color: #007aff;
  margin-bottom: 40px;
  font-size: 2.5em;
`;

const FaqGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(4, minmax(240px, 1fr));
  gap: 20px;
  @media (max-width: 1024px) {
    grid-template-columns: repeat(2, minmax(240px, 1fr));
  }
  @media (max-width: 768px) {
    grid-template-columns: 1fr;
  }
`;

const FaqCard = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 8px;
  background: #fff;
  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  cursor: pointer;
  position: relative; /* Needed for z-index to work */
  z-index: ${({ isActive }) => (isActive ? 999 : 1)}; /* Bring active card to front */

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
`;

const CardTitle = styled.h3`
  margin-top: 15px;
  font-size: 1.1em;
`;
const Overlay = styled.div`
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  display: ${({ isActive }) => (isActive ? 'block' : 'none')};
  z-index: 998;
`;

const Modal = styled.div`
  background: #fff;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(${({ isActive }) => (isActive ? 1 : 0.5)});
  transition: all 0.3s ease;
  padding: 20px;
  border-radius: 15px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  width: 80%;
  max-width: 500px;
  z-index: 999;
  display: ${({ isActive }) => (isActive ? 'block' : 'none')};
  max-height: 80vh;
  overflow-y: auto;
`;

const Question = styled.div`
  margin: 10px 0;
  padding: 10px;
  background: #f7f7f7;
  border-radius: 5px;
  cursor: pointer;

  &:hover {
    background: #e7e7e7;
  }
`;

const Answer = styled.p`
  background: #fff;
  padding: 10px;
  border-left: 4px solid #007aff;
`;


const FAQ = () => {
  const [activeCard, setActiveCard] = useState(null);
  const [activeQuestion, setActiveQuestion] = useState(null);

  const faqCategories = [
    {
      id: 'payments',
      icon: <FaCreditCard />,
      title: "Payments and billing",
      description: "Get help with payment and billing queries.",
      content: "Detailed payment and billing information goes here."
    },
    {
      
      icon: <FaPlane />,
      title: "Booking Flights",
      description: "All you need to know about booking your flight.",
      content: "Information about flight booking, changes, and cancellation policies."
    },
    {
      icon: <FaBriefcase />,
      title: "Business Travel",
      description: "Manage your business travel arrangements.",
      content: "Guidance for managing corporate accounts and business travel bookings."
    },
    {
      icon: <FaRegLifeRing />,
      title: "Support and Assistance",
      description: "Need help? Find out how to get support.",
      content: "Information on how to reach customer support, service hours, and more."
    },
    {
      icon: <FaInfoCircle />,
      title: "General Information",
      description: "Learn more about our services.",
      content: "General information about our services, company background, and policies."
    },
    {
      icon: <FaPassport />,
      title: "Travel Documentation",
      description: "Ensure you have the required documents for your trip.",
      content: "Details on passport, visa requirements, and health advisories for your travel."
    },
    {
      icon: <FaLock />,
      title: "Security and Privacy",
      description: "Understand our commitment to your privacy.",
      content: "Information on how we protect your data and privacy."
    },
    {
      icon: <FaGlobe />,
      title: "International Travel",
      description: "Information for globe trotters.",
      content: "Find out about international travel arrangements, visas, and more."
    },
    
  ];

  const faqQuestions = {
    payments: [
      { question: "How do I update my billing information?", answer: "You can update your billing information through your account settings." },
      
    ],
   
  };

  const handleClickCard = (index) => {
    setActiveCard(activeCard === index ? null : index);
    setActiveQuestion(null); 
  };

  const handleClickQuestion = (questionIndex) => {
    if (activeQuestion === questionIndex) {
      setActiveQuestion(null); 
    } else {
      setActiveQuestion(questionIndex);
    }
  };

  const toggleExpand = (index) => {
    setExpanded(expanded === index ? null : index);
  };
  return (
    <>
      <Container>
        <Header>How can we help you today?</Header>
        <IconContext.Provider value={{ size: '2em' }}>
          <FaqGrid>
            {faqCategories.map((cat, index) => (
              <FaqCard key={index} onClick={() => handleClickCard(index)}>
                {cat.icon}
                <CardTitle>{cat.title}</CardTitle>
              </FaqCard>
            ))}
          </FaqGrid>
        </IconContext.Provider>
      </Container>

      <Overlay isActive={activeCard != null} onClick={() => setActiveCard(null)} />
      {activeCard != null && (
        <Modal isActive={activeCard != null}>
          {faqCategories[activeCard] && (
            <>
              <CardTitle>{faqCategories[activeCard].title}</CardTitle>
              {faqQuestions[faqCategories[activeCard].id]?.map((qa, qaIndex) => (
                <Question key={qaIndex} onClick={() => handleClickQuestion(qaIndex)}>
                  {qa.question}
                  {activeQuestion === qaIndex && <Answer>{qa.answer}</Answer>}
                </Question>
              ))}
            </>
          )}
        </Modal>
      )}
    </>
  );
};

export default FAQ;
